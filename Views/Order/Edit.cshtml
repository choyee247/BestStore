@model Example2.Models.OrderFormViewModel

@{
    ViewData["Title"] = "🛠️ Edit Order";
}

<h2 class="text-center text-info fw-bold my-4">🛠️ Edit Order #@Model.Id</h2>

<div class="row justify-content-center">
    <div class="col-md-10">
        <div class="card shadow-lg rounded-4 p-4">
            <form asp-action="Edit">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input type="hidden" asp-for="Id" />

                <div class="row mb-4">
                    <div class="col-md-6">
                        <label asp-for="CustomerName" class="form-label fw-semibold">👤 Customer Name</label>
                        <input asp-for="CustomerName" class="form-control rounded-3 shadow-sm" placeholder="Enter full name" />
                        <span asp-validation-for="CustomerName" class="text-danger"></span>
                    </div>
                    <div class="col-md-6">
                        <label asp-for="Email" class="form-label fw-semibold">📧 Email</label>
                        <input asp-for="Email" class="form-control rounded-3 shadow-sm" placeholder="Email address" />
                        <span asp-validation-for="Email" class="text-danger"></span>
                    </div>
                </div>

                <div class="mb-4">
                    <label asp-for="Address" class="form-label fw-semibold">🏠 Shipping Address</label>
                    <textarea asp-for="Address" class="form-control rounded-3 shadow-sm" rows="3" placeholder="Delivery address..."></textarea>
                    <span asp-validation-for="Address" class="text-danger"></span>
                </div>

                <div class="row mb-4">
                    <div class="col-md-6">
                        <label asp-for="ShippingMethod" class="form-label fw-semibold">🚚 Shipping Method</label>
                        <select asp-for="ShippingMethod" class="form-select rounded-3 shadow-sm">
                            <option value="Standard">📦 Standard</option>
                            <option value="Express">🚀 Express</option>
                            <option value="Overnight">🌙 Overnight</option>
                        </select>
                        <span asp-validation-for="ShippingMethod" class="text-danger"></span>
                    </div>
                    <div class="col-md-6">
                        <label asp-for="ShippingCost" class="form-label fw-semibold">💰 Shipping Cost</label>
                        <input asp-for="ShippingCost" class="form-control rounded-3 shadow-sm" />
                        <span asp-validation-for="ShippingCost" class="text-danger"></span>
                    </div>
                </div>

                <h4 class="text-success mb-3">🛒 Order Items</h4>
                <div id="itemsContainer">
                    @for (var i = 0; i < Model.Items.Count; i++)
                    {
                        <div class="row mb-3 g-2 p-2 rounded-3 border order-item-row bg-light-subtle shadow-sm">
                            <div class="col-md-6">
                                <label class="form-label">🧾 Product</label>
                                <select asp-for="@Model.Items[i].ProductId" class="form-select product-select rounded-3">
                                    <option value="">-- Select Product --</option>
                                    @foreach (var product in ViewBag.ProductsList)
                                    {
                                        <option value="@product.Id"
                                                data-stock="@product.StockQuantity"
                                                data-price="@product.Price"
                                                selected="@(product.Id == Model.Items[i].ProductId)">
                                            @product.ProductName (Stock: @product.StockQuantity)
                                        </option>
                                    }
                                </select>
                                <div class="form-text stock-info">Available: 0</div>
                            </div>
                            <div class="col-md-5">
                                <label class="form-label">🔢 Qty</label>
                                <input asp-for="@Model.Items[i].Quantity" class="form-control quantity-input rounded-3" min="1" />
                                <span asp-validation-for="@Model.Items[i].Quantity" class="text-danger"></span>
                            </div>
                           @*  <div class="col-md-3 d-flex align-items-end">
                                <div class="price-info fw-semibold">$0.00</div>
                            </div> *@
                            <div class="col-md-1 d-flex align-items-end">
                                <button type="button" class="btn btn-outline-danger btn-sm rounded-pill remove-item">🗑️</button>
                            </div>
                        </div>
                    }
                </div>

                <div class="mb-4">
                    <button type="button" id="addItem" class="btn btn-outline-secondary rounded-pill">➕ Add Product</button>
                </div>

                <div class="d-flex justify-content-between">
                    <input type="submit" value="💾 Save Changes" class="btn btn-primary rounded-pill px-4" />
                    <a asp-action="Index" class="btn btn-outline-secondary rounded-pill px-4">🔙 Cancel</a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $("#addItem").click(function () {
                const index = $("#itemsContainer .order-item-row").length;
                const newRow = `
                    <div class="row mb-3 g-2 p-2 rounded-3 border order-item-row bg-light-subtle shadow-sm">
                        <div class="col-md-6">
                            <label class="form-label">🧾 Product</label>
                            <select name="Items[${index}].ProductId" class="form-select product-select rounded-3">
                                <option value="">-- Select Product --</option>
                                @foreach (var product in ViewBag.ProductsList)
                                 {
                                <text>
                                       <option value="@product.Id" data-stock="@product.StockQuantity" data-price="@product.Price">
                                       @product.ProductName (Stock: @product.StockQuantity)
                                       </option>
                                </text>
                                 }
                            </select>
                            <div class="form-text stock-info">Available: 0</div>
                        </div>
                        <div class="col-md-5">
                            <label class="form-label">🔢 Qty</label>
                            <input name="Items[${index}].Quantity" type="number" class="form-control quantity-input rounded-3" min="1" value="1" />
                        </div>
                        <div class="col-md-1 d-flex align-items-end">
                            <button type="button" class="btn btn-outline-danger btn-sm rounded-pill remove-item">🗑️</button>
                        </div>
                    </div>`;
                $("#itemsContainer").append(newRow);
                initProductSelect($("#itemsContainer .order-item-row").last().find(".product-select"));
            });

            $(document).on("click", ".remove-item", function () {
                $(this).closest(".order-item-row").remove();
            });

            function initProductSelect(selectElement) {
                selectElement.change(function () {
                    const row = $(this).closest(".order-item-row");
                    const selectedOption = $(this).find("option:selected");
                    const stock = selectedOption.data("stock") || 0;
                    const price = selectedOption.data("price") || 0;

                    row.find(".stock-info").text("Available: " + stock);
                    row.find(".price-info").text("$" + price.toFixed(2));
                    row.find(".quantity-input").attr("max", stock);
                });

                selectElement.trigger("change");
            }

            $(".product-select").each(function () {
                initProductSelect($(this));
            });
        });
    </script>
}
