@model ProductDto
@{
    ViewData["Title"] = "Edit Product";
}

<div class="row">
    <div class="col-lg-8 mx-auto bg-light p-4 rounded shadow-sm border border-secondary-subtle">
        <h2 class="text-center mb-4 fw-bold text-primary">✏️ Edit Product</h2>

        <form asp-action="Edit" asp-route-id="@ViewData["ProductId"]" method="post" enctype="multipart/form-data">

            <!-- Product Name -->
            <div class="mb-3 row">
                <label class="col-sm-3 col-form-label fw-semibold">Name</label>
                <div class="col-sm-9">
                    <input asp-for="ProductName" class="form-control" required />
                    <span asp-validation-for="ProductName" class="text-danger"></span>
                </div>
            </div>

            <!-- Category -->
            <div class="mb-3 row">
                <label class="col-sm-3 col-form-label fw-semibold">Category</label>
                <div class="col-sm-9">
                    <select asp-for="CategoryId" asp-items="ViewBag.Categories" class="form-select" id="categoryId" required>
                        <option value="">-- Select Category --</option>
                    </select>
                    <span asp-validation-for="CategoryId" class="text-danger"></span>
                </div>
            </div>

            <!-- Brand -->
            <div class="mb-3 row">
                <label class="col-sm-3 col-form-label fw-semibold">Brand</label>
                <div class="col-sm-9">
                    <select asp-for="BrandId" asp-items="ViewBag.Brands" class="form-select" id="brandId" required>
                        <option value="">-- Select Brand --</option>
                    </select>
                    <span asp-validation-for="BrandId" class="text-danger"></span>
                </div>
            </div>

            <!-- Price -->
            <div class="mb-3 row">
                <label class="col-sm-3 col-form-label fw-semibold">Price</label>
                <div class="col-sm-9">
                    <input asp-for="Price" class="form-control" required />
                    <span asp-validation-for="Price" class="text-danger"></span>
                </div>
            </div>

            <!-- Description -->
            <div class="mb-3 row">
                <label class="col-sm-3 col-form-label fw-semibold">Description</label>
                <div class="col-sm-9">
                    <textarea asp-for="Description" class="form-control" rows="3" required></textarea>
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>
            </div>

            <!-- Current Image -->
            <div class="mb-3 row">
                <label class="col-sm-3 col-form-label fw-semibold">Current Image</label>
                <div class="col-sm-9">
                    @if (ViewData["ImageFileName"] != null)
                    {
                        var imagePath = "/Products/" + ViewData["ImageFileName"];
                        <img src="@imagePath" class="img-thumbnail" width="150" alt="Current Image" />
                        <p class="mt-2"><strong>Path:</strong> @imagePath</p>
                    }
                    else
                    {
                        <p class="text-muted">No image available.</p>
                    }
                </div>
            </div>

            <!-- Upload New Image -->
            <div class="mb-4 row">
                <label class="col-sm-3 col-form-label fw-semibold">Upload New Image</label>
                <div class="col-sm-9">
                    <input type="file" asp-for="ImageFile" class="form-control" accept=".jpg,.jpeg,.png,.gif" onchange="validateImageSize(this)">
                    <small class="text-muted">Max size: 500KB. Formats: JPG, PNG, GIF</small>
                    <span asp-validation-for="ImageFile" class="text-danger"></span>

                    <div class="mt-3">
                        <img id="previewImage" src="#" alt="Image Preview" style="display:none;" class="img-thumbnail" width="150" />
                        <p id="fileSizeInfo" class="text-muted mt-2"></p>
                        <p id="fileSizeWarning" class="text-danger" style="display:none;">⚠️ File size exceeds 30 KB!</p>
                    </div>
                </div>
            </div>

            <!-- Buttons -->
            <div class="row d-flex justify-content-end align-items-end">
                <div class="col-sm-4 d-grid">
                    <button type="submit" class="btn btn-primary text-white">
                        <i class="bi bi-save me-1"></i> Save Changes
                    </button>
                </div>
                <div class="col-sm-4 d-grid mt-2 mt-sm-0">
                    <a asp-action="Index" class="btn btn-outline-secondary">
                        <i class="bi bi-arrow-left me-1"></i> Cancel
                    </a>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        function validateImageSize(input) {
            const file = input.files[0];
            const preview = document.getElementById('previewImage');
            const sizeInfo = document.getElementById('fileSizeInfo');
            const warning = document.getElementById('fileSizeWarning');

            if (file) {
                const fileSizeKB = Math.round(file.size / 1024);
                sizeInfo.textContent = `File size: ${fileSizeKB} KB`;

                if (file.size > 30720) {
                    preview.style.display = 'none';
                    warning.style.display = 'block';
                } else {
                    const reader = new FileReader();
                    reader.onload = function (e) {
                        preview.src = e.target.result;
                        preview.style.display = 'block';
                    };
                    reader.readAsDataURL(file);
                    warning.style.display = 'none';
                }
            } else {
                preview.style.display = 'none';
                sizeInfo.textContent = '';
                warning.style.display = 'none';
            }
        }

        document.getElementById("categoryId").addEventListener("change", function () {
            var categoryId = this.value;
            fetch(`/Category/GetBrandsByCategory?categoryId=${categoryId}`)
                .then(response => response.json())
                .then(data => {
                    const brandSelect = document.getElementById("brandId");
                    brandSelect.innerHTML = '<option value="">-- Select Brand --</option>';
                    data.forEach(brand => {
                        const option = document.createElement("option");
                        option.value = brand.id;
                        option.text = brand.name;
                        brandSelect.appendChild(option);
                    });
                });
        });
    </script>
}
